##############
Authentication
##############

* SSL on the transport (HTTP) layer

* machine uuid as username, password

* CRAM-SHA256

Registration
############
::

  client -- (uuid, auth_secret,
             signing_secret) - > server/v0/register
                                 |
         <-- result ------------ +

:uuid: random uuid generated by the client

:auth_secret: random 32<VCHAR> secret used to sign CRAM challenge

:signing_secret: random 32<VCHAR> secret used to sign query parameters

Log in
######
::

  client -- (uuid) ------------ > server/v0/auth/challenge
                                  |
       + <- (challenge, token) -- +
       |
       + -- (uuid, response) ---> + v0/auth/response
                                  |
       + <- (token) ------------- +

:challenge: CRAM challenge. random 32<VCHAR>, timestamp

:token: 32<VCHAR> used to sign (together with signing_secret) the query
  parameters with HMAC-SHA256 on next request (prevents replay). Token
  is generated a new at every request.

:response: CRAM response to the challenge

.. [1] The sequence diagrams show happy path only
